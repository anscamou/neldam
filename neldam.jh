enum OrderStatus {
	VALIDATED, COMPLETED, PAID, PENDING, CANCEL, 
    DELIVERING, REFUNDED, DELIVERED, CASH_ON_DELIVERY,
    ACCEPTED, REFUSED
}
enum Gender {
	MALE, FEMALE
}
enum PaymentType {
	CREDIT_CARD(card), CASH(cash),
    ORANGE_MONEY(om), WAVE(wave),
    FREE_MONEY(fm), OTHERS(others)
}
enum PaymentStatus {
	VALIDE, KO, EN_COURS
}
entity Customer {
	gender Gender required
    phone String required
    addressLine1 String required
    addressLine2 String
    city String required
    country String required
}
entity Order {	
    description String
    latFrom Double required
    longFrom Double required
    addrFrom String 
    phoneTo String required
    latTo Double required
    longTo Double required
    addrTo String
    orderStatus OrderStatus required
}
entity Payment {
	placeDate Instant required
    totalPrice BigDecimal required min(0)
    payment PaymentType required
    paymentReference String
    paymentStatus PaymentStatus
    message String
}
enum Language {
    FRENCH, ENGLISH
}
// defining multiple OneToOne relationships
relationship OneToOne {
	Customer{user} to User
    Order{order} to Payment
}
// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Customer to Order{customer}
}

// Set pagination options
// paginate JobHistory, Employee with infinite-scroll
paginate Order,Customer with pagination

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
